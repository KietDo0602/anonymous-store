{"ast":null,"code":"import _regeneratorRuntime from \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\src\\\\components\\\\Cart.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { removeItem as _removeItem, addQuantity as _addQuantity, subtractQuantity as _subtractQuantity } from './actions/cartActions';\nimport Recipe from './Recipe';\nimport { UserContext } from \"../UserContext\";\nimport image from \"../images/noproduct.png\";\n\nfunction Cart(props) {\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser; // useEffect(() => {\n  //     async function fetchMyAPI() {\n  //         if (user === null) return;\n  //         let response = await axios.get(`http://localhost:3001/users/get/${user.id}`, {\n  //             params: {\n  //                 id: user.id\n  //             }\n  //         });\n  //         setItemsList(response.data.cart);\n  //     }\n  //     fetchMyAPI()\n  // }, [])\n  // Adding a new item to the cart update\n\n\n  var handleAddQuantity =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(props, item, user) {\n      var userId, productId, items, response, userUpdated;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user === null)) {\n                _context.next = 3;\n                break;\n              }\n\n              props.addQuantity(item.id);\n              return _context.abrupt(\"return\");\n\n            case 3:\n              userId = user._id;\n              productId = item._id;\n              items = {\n                userId: userId,\n                productId: productId\n              };\n              _context.next = 8;\n              return axios.post('http://localhost:3001/users/addItem', items);\n\n            case 8:\n              response = _context.sent;\n              _context.next = 11;\n              return axios.get(\"http://localhost:3001/users/get/\".concat(userId));\n\n            case 11:\n              userUpdated = _context.sent;\n              setUser(userUpdated.data);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleAddQuantity(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Handle remove a one quantity from an item\n\n\n  var handleSubtractQuantity =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(props, item, user) {\n      var userId, productId, items, response, userUpdated;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(user === null)) {\n                _context2.next = 3;\n                break;\n              }\n\n              props.addQuantity(item.id);\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              userId = user._id;\n              productId = item._id;\n              items = {\n                userId: userId,\n                productId: productId\n              };\n              _context2.next = 8;\n              return axios.post('http://localhost:3001/users/removeItem', items);\n\n            case 8:\n              response = _context2.sent;\n              _context2.next = 11;\n              return axios.get(\"http://localhost:3001/users/get/\".concat(userId));\n\n            case 11:\n              userUpdated = _context2.sent;\n              setUser(userUpdated.data);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function handleSubtractQuantity(_x4, _x5, _x6) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // // Handle removing the whole item from the cart, regardless of the quantity\n  // const handleRemove = async (props, item, user) => {\n  //     if (user === null) {\n  //         props.removeItem(item.id);\n  //         return;\n  //     }\n  //     const id = item._id;\n  //     let index = null;\n  //     // Remove from the front end\n  //     for (var i = 0; i < itemsList.length; i++) {\n  //         if (itemsList[i]._id === id) {\n  //             index = i;\n  //             break;\n  //         }\n  //     }\n  //     let temp_state = [...itemsList];\n  //     let temp_element = { ...temp_state[index] };\n  //     temp_element.quantity = 0;\n  //     temp_state[index] = temp_element;\n  //     setItemsList( temp_state );\n  //     setUser({total: (user.total - item.price * item.quantity)});\n  //     // Remove from the backend side\n  //     const userId = user.id;\n  //     const name = item.name;\n  //     const response = await axios.get(`http://localhost:3001/items`);\n  //     const array = response.data;\n  //     var productId = null;\n  //     for (let i = 0; i < array.length; i++) {\n  //         if (array[i].name === name) {\n  //             productId = array[i]._id;\n  //             break;\n  //         }\n  //     }\n  //     const deleteItem = {userId, productId}\n  //     const res = await axios.post(\"http://localhost:3001/users/removeAll\", deleteItem);\n  //     console.log(res);\n  // }\n\n\n  var addedItems = null;\n\n  if (user != null) {\n    addedItems = user.cart.length ? user.cart.map(function (item) {\n      return item.quantity !== 0 ? React.createElement(\"li\", {\n        className: \"collection-item avatar\",\n        key: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        alt: image,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"item-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, item.name), React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.desc), React.createElement(\"p\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Price: $\", item.price)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" Quantity: \", item.quantity, \" \")), React.createElement(\"div\", {\n        className: \"add-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        onClick: function onClick() {\n          handleAddQuantity(props, item, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"arrow_drop_up\")), React.createElement(Link, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        onClick: function onClick() {\n          handleSubtractQuantity(props, item, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"arrow_drop_down\"))), React.createElement(\"button\", {\n        className: \"waves-effect waves-light btn blue remove\",\n        onClick: function onClick() {\n          handleSubtractQuantity(props, item, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Remove\"))) : React.createElement(React.Fragment, null);\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"There is nothing inside your cart. Click \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"here\"), \" to add some to it! \");\n  } else {\n    addedItems = props.items.length ? props.items.map(function (item) {\n      return React.createElement(\"li\", {\n        className: \"collection-item avatar\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.img,\n        alt: item.img,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"item-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, item.title), React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, item.desc), React.createElement(\"p\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Price: \", item.price, \"$\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Quantity: \", item.quantity)), React.createElement(\"div\", {\n        className: \"add-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        onClick: function onClick() {\n          handleAddQuantity(props, item, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"arrow_drop_up\")), React.createElement(Link, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        onClick: function onClick() {\n          handleSubtractQuantity(props, item, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"arrow_drop_down\"))), React.createElement(\"button\", {\n        className: \"waves-effect waves-light btn blue remove\",\n        onClick: function onClick() {\n          handleSubtractQuantity(props, item, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"There is nothing inside your cart. Click \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"here\"), \" to add some to it! \");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"You have ordered:\"), React.createElement(\"ul\", {\n    className: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, addedItems)), user !== null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \" \", React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \" Total cost is: $\", user.total, \" \"), \" \"), \" \") : React.createElement(Recipe, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.addedItems,\n    addedItems: state.addedItems\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    removeItem: function removeItem(id) {\n      dispatch(_removeItem(id));\n    },\n    addQuantity: function addQuantity(id) {\n      dispatch(_addQuantity(id));\n    },\n    subtractQuantity: function subtractQuantity(id) {\n      dispatch(_subtractQuantity(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["H:\\React Code\\Anonymous online store\\React-Shopping-Cart-master\\anonymous-online-store\\src\\components\\Cart.js"],"names":["React","useContext","useState","useEffect","connect","Link","axios","removeItem","addQuantity","subtractQuantity","Recipe","UserContext","image","Cart","props","user","setUser","handleAddQuantity","item","id","userId","_id","productId","items","post","response","get","userUpdated","data","handleSubtractQuantity","addedItems","cart","length","map","quantity","name","desc","price","img","title","total","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { removeItem,addQuantity,subtractQuantity} from './actions/cartActions';\r\nimport Recipe from './Recipe';\r\nimport {UserContext} from \"../UserContext\";\r\nimport image from \"../images/noproduct.png\"\r\n\r\nfunction Cart(props) {\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchMyAPI() {\r\n    //         if (user === null) return;\r\n    //         let response = await axios.get(`http://localhost:3001/users/get/${user.id}`, {\r\n    //             params: {\r\n    //                 id: user.id\r\n    //             }\r\n    //         });\r\n    //         setItemsList(response.data.cart);\r\n    //     }\r\n    //     fetchMyAPI()\r\n    // }, [])\r\n\r\n\r\n    // Adding a new item to the cart update\r\n    const handleAddQuantity = async (props, item, user) => {\r\n        if (user === null) {\r\n            props.addQuantity(item.id);\r\n            return;\r\n        }\r\n        const userId = user._id;\r\n        const productId = item._id;\r\n        var items = {userId, productId};\r\n        const response = await axios.post('http://localhost:3001/users/addItem', items);\r\n        let userUpdated = await axios.get(`http://localhost:3001/users/get/${userId}`);\r\n        setUser(userUpdated.data);\r\n    }\r\n\r\n\r\n    // Handle remove a one quantity from an item\r\n    const handleSubtractQuantity = async (props, item, user) => {\r\n        if (user === null) {\r\n            props.addQuantity(item.id);\r\n            return;\r\n        }\r\n        const userId = user._id;\r\n        const productId = item._id;\r\n        var items = {userId, productId};\r\n        const response = await axios.post('http://localhost:3001/users/removeItem', items);\r\n        let userUpdated = await axios.get(`http://localhost:3001/users/get/${userId}`);\r\n        setUser(userUpdated.data);\r\n    }\r\n    // // Handle removing the whole item from the cart, regardless of the quantity\r\n    // const handleRemove = async (props, item, user) => {\r\n    //     if (user === null) {\r\n    //         props.removeItem(item.id);\r\n    //         return;\r\n    //     }\r\n    //     const id = item._id;\r\n    //     let index = null;\r\n    //     // Remove from the front end\r\n    //     for (var i = 0; i < itemsList.length; i++) {\r\n    //         if (itemsList[i]._id === id) {\r\n    //             index = i;\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     let temp_state = [...itemsList];\r\n    //     let temp_element = { ...temp_state[index] };\r\n    //     temp_element.quantity = 0;\r\n    //     temp_state[index] = temp_element;\r\n    //     setItemsList( temp_state );\r\n    //     setUser({total: (user.total - item.price * item.quantity)});\r\n    //     // Remove from the backend side\r\n    //     const userId = user.id;\r\n    //     const name = item.name;\r\n    //     const response = await axios.get(`http://localhost:3001/items`);\r\n    //     const array = response.data;\r\n    //     var productId = null;\r\n    //     for (let i = 0; i < array.length; i++) {\r\n    //         if (array[i].name === name) {\r\n    //             productId = array[i]._id;\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    //     const deleteItem = {userId, productId}\r\n    //     const res = await axios.post(\"http://localhost:3001/users/removeAll\", deleteItem);\r\n    //     console.log(res);\r\n    // }\r\n\r\n\r\n    var addedItems = null;\r\n    if (user != null) {\r\n            addedItems = user.cart.length ? ( user.cart.map(item => {\r\n            return (\r\n                item.quantity !== 0 ?\r\n                <li className=\"collection-item avatar\" key={item._id}>\r\n                    <div className=\"item-img\"> \r\n                        <img src={image} alt={image} className=\"\"/>\r\n                    </div>\r\n                    <div className=\"item-desc\">\r\n                        <span className=\"title\">{item.name}</span>\r\n                        <p className=\"description\">{item.desc}</p>\r\n                        <p className=\"price\"><b>Price: ${item.price}</b></p> \r\n                        <p>\r\n                            <b> Quantity: { item.quantity } </b> \r\n                        </p>\r\n                        <div className=\"add-remove\">\r\n                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{handleAddQuantity(props, item, user)}}>arrow_drop_up</i></Link>\r\n                            <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{handleSubtractQuantity(props, item, user)}}>arrow_drop_down</i></Link>\r\n                        </div>\r\n                        <button className=\"waves-effect waves-light btn blue remove\" onClick={()=>{handleSubtractQuantity(props, item, user)}}>Remove</button>\r\n                    </div>\r\n                </li>\r\n                : <></>\r\n            )\r\n            })) : ( <p>There is nothing inside your cart. Click <a href=\"/\">here</a> to add some to it! </p> );\r\n    } else {\r\n            addedItems = props.items.length ? ( props.items.map(item => {\r\n                return(\r\n                    <li className=\"collection-item avatar\" key={item.id}>\r\n                        <div className=\"item-img\"> \r\n                            <img src={item.img} alt={item.img} className=\"\"/>\r\n                        </div>\r\n                    \r\n                        <div className=\"item-desc\">\r\n                            <span className=\"title\">{item.title}</span>\r\n                            <p className=\"description\">{item.desc}</p>\r\n                            <p className=\"price\"><b>Price: {item.price}$</b></p> \r\n                            <p>\r\n                                <b>Quantity: {item.quantity}</b> \r\n                            </p>\r\n                            <div className=\"add-remove\">\r\n                                <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{handleAddQuantity(props, item, user)}}>arrow_drop_up</i></Link>\r\n                                <Link to=\"/cart\"><i className=\"material-icons\" onClick={()=>{handleSubtractQuantity(props, item, user)}}>arrow_drop_down</i></Link>\r\n                            </div>\r\n                            <button className=\"waves-effect waves-light btn blue remove\" onClick={()=>{handleSubtractQuantity(props, item, user)}}>Remove</button>\r\n                        </div>\r\n                    </li> \r\n                )\r\n                })\r\n            ): ( <p>There is nothing inside your cart. Click <a href=\"/\">here</a> to add some to it! </p> );\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"cart\">\r\n                <h5 className=\"description\">You have ordered:</h5>\r\n                <ul className=\"collection\">\r\n                    {addedItems}\r\n                </ul>\r\n            </div>\r\n            { user !== null ?\r\n                <div> <b> <h6> Total cost is: ${user.total} </h6> </b> </div>\r\n            : <Recipe /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        items: state.addedItems,\r\n        addedItems: state.addedItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        removeItem: (id)=>{dispatch(removeItem(id))},\r\n        addQuantity: (id)=>{dispatch(addQuantity(id))},\r\n        subtractQuantity: (id)=>{dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cart)"]},"metadata":{},"sourceType":"module"}