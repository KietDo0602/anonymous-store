{"ast":null,"code":"import _regeneratorRuntime from \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\React Code\\\\Anonymous online store\\\\React-Shopping-Cart-master\\\\anonymous-online-store\\\\src\\\\Login.js\";\nimport React, { Component, useContext, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { UserContext } from \"./UserContext\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // export class Login extends Component {\n//     // Page connects to eachother, data changes in one page will change in others\n//     checkUser = async (username, password) => {\n//         const res = await axios.get('http://localhost:3001/users');\n//         const { data } = res;\n//         var arr = Object.values(data);\n//         for (var i = 0; i < arr.length; i++) {\n//             console.log(arr[i].username, arr[i].password);\n//             if (arr[i].username === username && arr[i].password === password) {\n//                 return true;\n//             }\n//         }\n//         return false;\n//     }\n//     handleSubmit = async (e) => {\n//         const {username, password} = e.data;\n//         const exist = await this.checkUser(username, password);\n//         if (exist === true) {\n//             const token = await axios.post('http://localhost:3001/users/login', {username, password});\n//             console.log(token);\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//             <Container component=\"main\" maxWidth=\"xs\">\n//                 <CssBaseline />\n//                 <Box\n//                 sx={{\n//                     marginTop: 8,\n//                     display: 'flex',\n//                     flexDirection: 'column',\n//                     alignItems: 'center',\n//                 }}\n//                 >\n//                 <Typography component=\"h1\" variant=\"h3\">\n//                     Sign In\n//                 </Typography>\n//                 <Box component=\"form\" onSubmit={this.handleSubmit} noValidate sx={{ mt: 1 }}>\n//                     <TextField\n//                     margin=\"normal\"\n//                     required\n//                     fullWidth\n//                     id=\"username\"\n//                     label=\"Username\"\n//                     name=\"username\"\n//                     autoComplete=\"username\"\n//                     autoFocus\n//                     />\n//                     <TextField\n//                     margin=\"normal\"\n//                     required\n//                     fullWidth\n//                     name=\"password\"\n//                     label=\"Password\"\n//                     type=\"password\"\n//                     id=\"password\"\n//                     autoComplete=\"current-password\"\n//                     />\n//                     <FormControlLabel\n//                     control={<Checkbox value=\"remember\" color=\"primary\" />}\n//                     label=\"Remember me\"\n//                     />\n//                     <Button type=\"submit\" fullWidth variant=\"outlined\" sx={{ mt: 3, mb: 2 }}>\n//                     Sign In\n//                     </Button>\n//                     <h6>New User? <a href=\"/register\">Create your account</a> </h6>\n//                 </Box>\n//                 </Box>\n//             </Container>\n//             </div>\n//         )\n//     }\n// }\n// export default Login\n\nexport function Login() {\n  // const { user, setUser } = useContext(UserContext);\n  // const [state, setState] = React.useState({\n  //     username: \"\",\n  //     password: \"\",\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var checkUser =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(username, password) {\n      var res, data, arr, i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('http://localhost:3001/users');\n\n            case 2:\n              res = _context.sent;\n              data = res.data;\n              arr = Object.values(data);\n              i = 0;\n\n            case 6:\n              if (!(i < arr.length)) {\n                _context.next = 13;\n                break;\n              }\n\n              console.log(arr[i].username, arr[i].password);\n\n              if (!(arr[i].username === username && arr[i].password === password)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", true);\n\n            case 10:\n              i++;\n              _context.next = 6;\n              break;\n\n            case 13:\n              return _context.abrupt(\"return\", false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function checkUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              console.log(e);\n              console.log(username);\n              console.log(password); // const {username, password} = e.data;\n              // const exist = await checkUser(username, password);\n              // console.log(\"User exists in the database!\");\n              // if (exist === true) {\n              //     console.log(\"User exists in the database!\");\n              //     const token = await axios.post('http://localhost:3001/users/login', {username, password});\n              //     console.log(\"This is the token: \", token);\n              // }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const handleChange = (e) => {\n  //     setState({[e.target.name]: e.target.value });\n  // }\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Box, {\n    sx: {\n      marginTop: 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    sx: {\n      mt: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    autoComplete: \"username\",\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }),\n    label: \"Remember me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"outlined\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"New User? \", React.createElement(\"a\", {\n    href: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Create your account\"), \" \")))));\n}","map":{"version":3,"sources":["H:\\React Code\\Anonymous online store\\React-Shopping-Cart-master\\anonymous-online-store\\src\\Login.js"],"names":["React","Component","useContext","useState","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Box","Typography","Container","UserContext","axios","Link","Login","username","setUsername","password","setPassword","checkUser","get","res","data","arr","Object","values","i","length","console","log","handleSubmit","e","preventDefault","marginTop","display","flexDirection","alignItems","mt","target","value","mb"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,SAASC,KAAT,GAAiB;AACpB;AACA;AACA;AACA;AAJoB,kBAMYZ,QAAQ,CAAC,EAAD,CANpB;AAAA;AAAA,MAMba,QANa;AAAA,MAMHC,WANG;;AAAA,mBAOYd,QAAQ,CAAC,EAAD,CAPpB;AAAA;AAAA,MAObe,QAPa;AAAA,MAOHC,WAPG;;AASpB,MAAMC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOJ,QAAP,EAAiBE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIL,KAAK,CAACQ,GAAN,CAAU,6BAAV,CADJ;;AAAA;AACRC,cAAAA,GADQ;AAENC,cAAAA,IAFM,GAEGD,GAFH,CAENC,IAFM;AAGVC,cAAAA,GAHU,GAGJC,MAAM,CAACC,MAAP,CAAcH,IAAd,CAHI;AAILI,cAAAA,CAJK,GAID,CAJC;;AAAA;AAAA,oBAIEA,CAAC,GAAGH,GAAG,CAACI,MAJV;AAAA;AAAA;AAAA;;AAKVC,cAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,CAAD,CAAH,CAAOX,QAAnB,EAA6BQ,GAAG,CAACG,CAAD,CAAH,CAAOT,QAApC;;AALU,oBAMNM,GAAG,CAACG,CAAD,CAAH,CAAOX,QAAP,KAAoBA,QAApB,IAAgCQ,GAAG,CAACG,CAAD,CAAH,CAAOT,QAAP,KAAoBA,QAN9C;AAAA;AAAA;AAAA;;AAAA,+CAOC,IAPD;;AAAA;AAIkBS,cAAAA,CAAC,EAJnB;AAAA;AAAA;;AAAA;AAAA,+CAUP,KAVO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATP,SAAS;AAAA;AAAA;AAAA,KAAf;;AAaA,MAAMW,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACC,cAAF;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACAH,cAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACAa,cAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAJiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZa,YAAY;AAAA;AAAA;AAAA,KAAlB,CAtBoB,CAqCpB;AACA;AACA;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,GAAD;AACA,IAAA,EAAE,EAAE;AACAG,MAAAA,SAAS,EAAE,CADX;AAEAC,MAAAA,OAAO,EAAE,MAFT;AAGAC,MAAAA,aAAa,EAAE,QAHf;AAIAC,MAAAA,UAAU,EAAE;AAJZ,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARA,EAWA,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,QAAQ,EAAEN,YAAhC;AAA8C,IAAA,UAAU,MAAxD;AAAyD,IAAA,EAAE,EAAE;AAAEO,MAAAA,EAAE,EAAE;AAAN,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,MAAM,EAAC,QADP;AAEA,IAAA,QAAQ,MAFR;AAGA,IAAA,SAAS,MAHT;AAIA,IAAA,EAAE,EAAC,UAJH;AAKA,IAAA,KAAK,EAAC,UALN;AAMA,IAAA,IAAI,EAAC,UANL;AAOA,IAAA,YAAY,EAAC,UAPb;AAQA,IAAA,QAAQ,EAAE,kBAACN,CAAD;AAAA,aAAOf,WAAW,CAACe,CAAC,CAACO,MAAF,CAASC,KAAV,CAAlB;AAAA,KARV;AASA,IAAA,SAAS,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYI,oBAAC,SAAD;AACA,IAAA,MAAM,EAAC,QADP;AAEA,IAAA,QAAQ,MAFR;AAGA,IAAA,SAAS,MAHT;AAIA,IAAA,IAAI,EAAC,UAJL;AAKA,IAAA,KAAK,EAAC,UALN;AAMA,IAAA,IAAI,EAAC,UANL;AAOA,IAAA,EAAE,EAAC,UAPH;AAQA,IAAA,YAAY,EAAC,kBARb;AASA,IAAA,QAAQ,EAAE,kBAACR,CAAD;AAAA,aAAOb,WAAW,CAACa,CAAC,CAACO,MAAF,CAASC,KAAV,CAAlB;AAAA,KATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAuBI,oBAAC,gBAAD;AACA,IAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT;AAEA,IAAA,KAAK,EAAC,aAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EA2BI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,MAA/B;AAAgC,IAAA,OAAO,EAAC,UAAxC;AAAmD,IAAA,EAAE,EAAE;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASG,MAAAA,EAAE,EAAE;AAAb,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3BJ,EA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAd,MA9BJ,CAXA,CAFJ,CADA,CADJ;AAmDH","sourcesContent":["import React, { Component, useContext, useState } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {UserContext} from \"./UserContext\"\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// export class Login extends Component {\r\n//     // Page connects to eachother, data changes in one page will change in others\r\n//     checkUser = async (username, password) => {\r\n//         const res = await axios.get('http://localhost:3001/users');\r\n//         const { data } = res;\r\n//         var arr = Object.values(data);\r\n//         for (var i = 0; i < arr.length; i++) {\r\n//             console.log(arr[i].username, arr[i].password);\r\n//             if (arr[i].username === username && arr[i].password === password) {\r\n//                 return true;\r\n//             }\r\n//         }\r\n//         return false;\r\n//     }\r\n\r\n//     handleSubmit = async (e) => {\r\n//         const {username, password} = e.data;\r\n//         const exist = await this.checkUser(username, password);\r\n//         if (exist === true) {\r\n//             const token = await axios.post('http://localhost:3001/users/login', {username, password});\r\n//             console.log(token);\r\n\r\n//         }\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//             <Container component=\"main\" maxWidth=\"xs\">\r\n//                 <CssBaseline />\r\n//                 <Box\r\n//                 sx={{\r\n//                     marginTop: 8,\r\n//                     display: 'flex',\r\n//                     flexDirection: 'column',\r\n//                     alignItems: 'center',\r\n//                 }}\r\n//                 >\r\n//                 <Typography component=\"h1\" variant=\"h3\">\r\n//                     Sign In\r\n//                 </Typography>\r\n//                 <Box component=\"form\" onSubmit={this.handleSubmit} noValidate sx={{ mt: 1 }}>\r\n//                     <TextField\r\n//                     margin=\"normal\"\r\n//                     required\r\n//                     fullWidth\r\n//                     id=\"username\"\r\n//                     label=\"Username\"\r\n//                     name=\"username\"\r\n//                     autoComplete=\"username\"\r\n//                     autoFocus\r\n//                     />\r\n//                     <TextField\r\n//                     margin=\"normal\"\r\n//                     required\r\n//                     fullWidth\r\n//                     name=\"password\"\r\n//                     label=\"Password\"\r\n//                     type=\"password\"\r\n//                     id=\"password\"\r\n//                     autoComplete=\"current-password\"\r\n//                     />\r\n//                     <FormControlLabel\r\n//                     control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//                     label=\"Remember me\"\r\n//                     />\r\n//                     <Button type=\"submit\" fullWidth variant=\"outlined\" sx={{ mt: 3, mb: 2 }}>\r\n//                     Sign In\r\n//                     </Button>\r\n//                     <h6>New User? <a href=\"/register\">Create your account</a> </h6>\r\n//                 </Box>\r\n//                 </Box>\r\n//             </Container>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Login\r\n\r\nexport function Login() {\r\n    // const { user, setUser } = useContext(UserContext);\r\n    // const [state, setState] = React.useState({\r\n    //     username: \"\",\r\n    //     password: \"\",\r\n    // });\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const checkUser = async (username, password) => {\r\n        const res = await axios.get('http://localhost:3001/users');\r\n        const { data } = res;\r\n        var arr = Object.values(data);\r\n        for (var i = 0; i < arr.length; i++) {\r\n            console.log(arr[i].username, arr[i].password);\r\n            if (arr[i].username === username && arr[i].password === password) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n        console.log(username);\r\n        console.log(password);\r\n        // const {username, password} = e.data;\r\n        // const exist = await checkUser(username, password);\r\n        // console.log(\"User exists in the database!\");\r\n        // if (exist === true) {\r\n        //     console.log(\"User exists in the database!\");\r\n        //     const token = await axios.post('http://localhost:3001/users/login', {username, password});\r\n        //     console.log(\"This is the token: \", token);\r\n        // }\r\n    }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({[e.target.name]: e.target.value });\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n            sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            }}\r\n            >\r\n            <Typography component=\"h1\" variant=\"h3\">\r\n                Sign In\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n                />\r\n                <Button type=\"submit\" fullWidth variant=\"outlined\" sx={{ mt: 3, mb: 2 }}>\r\n                Sign In\r\n                </Button>\r\n                <h6>New User? <a href=\"/register\">Create your account</a> </h6>\r\n            </Box>\r\n            </Box>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}